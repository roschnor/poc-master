security:
    role_hierarchy:
        ROLE_SUPER_ADMIN: ['ROLE_ADMIN','ROLE_CREW']
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api:
            pattern: ^/api
            stateless: false

        main:
            form_login:
                # "login" is the name of the route created previously
                enable_csrf: true
                login_path: login
                check_path: login
            logout:
                path: app_logout
            login_throttling:
                max_attempts: 3
                interval: '15 minutes'

    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/fido/register,  roles: ROLE_USER, requires_channel: 'https'}
        - { path: ^/fido/login,  roles: IS_AUTHENTICATED_2FA_IN_PROGRESS, requires_channel: 'https'}
        - { path: ^/api/fido,  roles: ROLE_USER, requires_channel: 'https'}
        - { path: ^/api/me_check, roles: ROLE_USER }
        - { path: ^/api/docs, roles: PUBLIC_ACCESS } # Allows accessing the Swagger UI
        - { path: ^/authentication_token, roles: PUBLIC_ACCESS }
        - { path: ^/api/verify_email, roles: PUBLIC_ACCESS }
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/cron/, roles: PUBLIC_ACCESS }
        - { path: ^/api/two_factor_api/, roles: ROLE_USER }
        - { path: ^/two_factor_api/, roles: ROLE_USER }
        - { path: ^/2fa, roles: IS_AUTHENTICATED_2FA_IN_PROGRESS  }
        - { path: ^/api/2fa, roles: ROLE_USER  }
        - { path: ^/api,       roles: ROLE_USER }
        - { path: ^/register, roles: PUBLIC_ACCESS }
        - { path: ^/verify/email, roles: PUBLIC_ACCESS }
        - { path: ^/forgot-password, roles: PUBLIC_ACCESS }
        - { path: ^$, roles: PUBLIC_ACCESS }
        - { path: ^/$, roles: PUBLIC_ACCESS }
        - { path: ^/, roles: PUBLIC_ACCESS }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon

when@dev:
    security:
        firewalls:
            main:

            api:

