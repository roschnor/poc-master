version: '3.9'

networks:
  symfony_project_2024_net:
    driver: bridge

services:
  server:
    build:
      context: .
      dockerfile: ./docker/server/Dockerfile
    container_name: '${APP_NAME}-php'
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./docker/server/php/php.ini:/usr/local/etc/php/conf.d/extra-php-config.ini
    depends_on:
      db_server:
        condition: service_healthy
    networks:
      - symfony_project_2024_net

  nginx:
    image: nginx:1.24.0
    container_name: '${APP_NAME}-nginx'
    ports:
      - '${APP_PORT}:80'
      - '${APP_PORTS}:443'
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./docker/server/nginx-conf:/etc/nginx/conf.d
    depends_on:
      - server
    networks:
      - symfony_project_2024_net

  db_server:
    image: mariadb:10.11.7
    container_name: '${APP_NAME}-db'
    restart: always
    ports:
      - '${DB_PORT}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASS}'
      MYSQL_USER: '${MYSQL_USER}'
      MYSQL_PASSWORD: '${MYSQL_PASS}'
      MYSQL_DATABASE: '${MYSQL_DB}'
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/db/mariadb/my.cnf:/etc/mysql/conf.d/my.cnf
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD
      interval: 5s
      retries: 5
    networks:
      - symfony_project_2024_net

  db_test:
    image: mariadb:10.11.7
    container_name: '${APP_NAME}_dbtest'
    restart: always
    ports:
      - '33062:3306'
    volumes:
      - db_data_test:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: testrootsecret
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testsecret
      MYSQL_DATABASE: testdb
    networks:
      - symfony_project_2024_net

  mailhog:
    image: mailhog/mailhog
    platform: linux/x86_64
    restart: always
    ports:
      - "${PORT_MAIL_SMTP}:1025"
      - "${PORT_MAIL_HTTP}:8025"
    networks:
      - symfony_project_2024_net

  db_admin:
    image: phpmyadmin/phpmyadmin:5
    container_name: '${APP_NAME}-db-admin'
    ports:
      - '${APP_DB_ADMIN_PORT}:80'
    environment:
      PMA_HOST: db_server
    depends_on:
      db_server:
        condition: service_healthy
    volumes:
      - db_admin_data:/var/www/html
    networks:
      - symfony_project_2024_net

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  db_data:
  db_data_test:
  db_admin_data:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
